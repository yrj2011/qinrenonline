<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                      http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
  version="3.1"
  metadata-complete="true">

   <!-- 区分项目名称，防止默认重名 -->
   <context-param>
       <param-name>webAppRootKey</param-name>
       <param-value>maven.qinrenzaixian_web.root</param-value>
   </context-param>
  <display-name>qinrenzaixian web</display-name>
  <description>
         希望你们一家人团聚！
  </description>
  <welcome-file-list>
         <welcome-file>index.jsp</welcome-file>
   </welcome-file-list>
   <!-- Spring的log4j监听器 -->
   <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
   </listener>
   <!-- 设置Spring容器加载配置文件路径 -->
   <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:/spring/applicationContext*.xml</param-value>
   </context-param>
   <!-- ================spring mvc 适配器================ -->  
    <servlet>  
        <servlet-name>springMVC</servlet-name>  
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>  
        <init-param>  
            <param-name>contextConfigLocation</param-name>  
            <param-value>classpath:/spring/spring-mvc.xml</param-value>  
        </init-param>  
        <load-on-startup>1</load-on-startup>  
    </servlet>  
    <servlet-mapping>  
        <servlet-name>springMVC</servlet-name>  
        <url-pattern>*.shtml</url-pattern>  
        <!--拦截/*，这是一个错误的方式，请求可以走到Action中，但转到jsp时再次被拦截，不能访问到jsp。 
            拦截/，restful风格 弊端：会导致静态文件（jpg,js,css）被拦截后不能正常显示。解决办法看dispatcher-->
    
    </servlet-mapping>
     <!-- Spring会创建一个WebApplicationContext上下文，称为父上下文（父容器） ，保存在 ServletContext中，
     key是WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE的值。
         可以使用Spring提供的工具类取出上下文对象：WebApplicationContextUtils.getWebApplicationContext(ServletContext);
     DispatcherServlet是一个Servlet,可以同时配置多个，每个 DispatcherServlet有一个自己的上下文对象（WebApplicationContext），
     称为子上下文（子容器），子上下文可以访问父上下文中的内容，
        但父上下文不能访问子上下文中的内容。 它也保存在 ServletContext中，key是"org.springframework.web.servlet.FrameworkServlet.CONTEXT"+Servlet名称。
        当一个Request对象产生时，
        会把这个子上下文对象（WebApplicationContext）保存在Request对象中，key是DispatcherServlet.class.getName() + ".CONTEXT"。
       可以使用工具类取出上下文对象：RequestContextUtils.getWebApplicationContext(request);-->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!-- ================spring 字符过滤================ -->  
   <!-- 中文编码 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
    <!-- ================================================== -->  
    <servlet-mapping>          
        <servlet-name>default</servlet-name>         
        <url-pattern>*.html</url-pattern>        
    </servlet-mapping>     
    <servlet-mapping>          
        <servlet-name>default</servlet-name>         
        <url-pattern>*.css</url-pattern>        
    </servlet-mapping>    
    <servlet-mapping>          
        <servlet-name>default</servlet-name>         
        <url-pattern>*.js</url-pattern>        
    </servlet-mapping>    
     <servlet-mapping>          
        <servlet-name>default</servlet-name>         
        <url-pattern>*.png</url-pattern>        
    </servlet-mapping>    
     <servlet-mapping>          
        <servlet-name>default</servlet-name>         
        <url-pattern>*.jpg</url-pattern>        
    </servlet-mapping>    
     <servlet-mapping>          
        <servlet-name>default</servlet-name>         
        <url-pattern>*.gif</url-pattern>        
    </servlet-mapping> 
    
    <error-page>
	     <error-code>404</error-code>
	     <location>/jsp/error/404.jsp</location>
	 </error-page>
	 
	 <error-page>
	     <exception-type>java.lang.Exception</exception-type>
	     <location>/jsp/error/exception.jsp</location>
	 </error-page>
</web-app>
